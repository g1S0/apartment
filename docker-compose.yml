version: '3.8'

services:
  user_db:
    image: postgres:15
    container_name: user_db
    environment:
      POSTGRES_USER: ${USER_DB_USERNAME}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}
    ports:
      - "${USER_DB_PORT}:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - app_network

  real_estate_db:
    image: postgres:15
    container_name: real_estate_db
    environment:
      POSTGRES_USER: ${REAL_ESTATE_USERNAME}
      POSTGRES_PASSWORD: ${REAL_ESTATE_PASSWORD}
      POSTGRES_DB: ${REAL_ESTATE_DB_NAME}
    ports:
      - "${REAL_ESTATE_DB_PORT}:5432"
    volumes:
      - real_estate_db_data:/var/lib/postgresql/data
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:2181"
    networks:
      - app_network

  notification_kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: notification_kafka
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    ports:
      - "${KAFKA_ADVERTISED_LISTENERS_PORT}:9092"
    depends_on:
      - zookeeper
    networks:
      - app_network

volumes:
  user_db_data:
  real_estate_db_data:

networks:
  app_network: